webpackJsonp([1],{"/TCW":function(e,r){e.exports={short:"es",long:"Spanish",createdBy:"Gonzalo2310"}},"0iGN":function(e,r,n){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default={state:{selectedMethod:"",adding:[{name:"splice",shortDesc:"عنصر أو أكثر للمصفوفة",desc:"تضيف و/أو تحذف عناصر من المصفوفة.",example:"arr.splice(2, 0, 'tacos');<br>\n        console.log(arr);",output:"[5, 1, 'tacos', 8]"},{name:"push",shortDesc:"عناصر إلى نهاية المصفوفة",desc:"إضافة عنصر أو أكثر إلى نهاية المصفوفة وتعيد الطول الجديد للمصفوفة.",example:"arr.push(2);<br>\n        console.log(arr);",output:"[5, 1, 8, 2]"},{name:"unshift",shortDesc:"عناصر إلى بداية المصفوفة",desc:"إضافة عنصر أو أكثر إلى بداية المصفوفة وتعيد الطول الجديد للمصفوفة.",example:"arr.unshift(2, 7);<br>\n        console.log(arr);",output:"[2, 7, 5, 1, 8]"},{name:"concat",shortDesc:"هذه المصفوفة إلى مصفوفة أو أكثر و/أو قيمة أو أكثر",desc:"تعيد المصفوفة المكونة من هذه المصوفة مع مصفوفة أو أكثر و/أو قيمة أكثر الأخرى.",example:"let arr2 = ['a', 'b', 'c'];<br>\n        let arr3 = arr.concat(arr2);<br>\n        console.log(arr3);",output:"[5, 1, 8, 'a', 'b', 'c']"}],removing:[{name:"splice",shortDesc:"عنصر أو أكثر من المصفوفة",desc:"تضيف و/أو تحذف عناصر من المصفوفة.",example:"arr.splice(2, 1);<br>\n        console.log(arr);",output:"[5, 1]"},{name:"pop",shortDesc:"العنصر الأخير في المصفوفة",desc:"تحذف العنصر الأخير في المصفوفة وتعيد هذا العنصر.",example:"arr.pop();<br>\n        console.log(arr);",output:"[5, 1]"},{name:"shift",shortDesc:"العنصر الأول من المصفوفة",desc:"تحذف العنصر الأول من المصفوفة وتعيد هذا العنصر.",example:"arr.shift();<br>\n        console.log(arr);",output:"[1, 8]"},{name:"slice",shortDesc:"عنصر أو أكثر من المصفوفة للاستخدام ، تاركة المصفوفة الأصلية كما هي",desc:"الدالة <code>slice()</code> تعيد نسخة مصغرة لجزء من مصفوفة إلى عنصر مصفوفة جديد . بإمكانك إما تحديد العنصر الأخير ( حيث أن العنصر الأول الافتراضي سيكون صفر ) أو بإمكانك تحديد البداية والنهاية, مفصولين بفاصلة , comma-separated. المصفوفة الأصلية لن يتم تعديلها.",example:"let slicedArr = arr.slice(1);<br>\n        console.log(arr);<br>\n        console.log(slicedArr);",output:"[5, 1, 8]<br>\n        [1, 8]"}],string:[{name:"join",shortDesc:"دمج جميع عناصر المصفوفة في سلسلة نصية واحدة",desc:"دمج جميع عناصر المصفوفة في سلسلة نصية . بإمكانك دمجهم مع بعض كماهم أو مع فاصل بينهم, <code>elements.join(' -\n          ')</code> تعطيك <code>foo-bar</code>",example:"console.log(arr.join());",output:'"5,1,8"'},{name:"toString",shortDesc:"تعيد سلسلة نصية تمثل هذه المصفوفة.",desc:"تعيد سلسلة نصية تمثل المصفوفة وعناصرها.",example:"console.log(arr.toString());",output:'"5,1,8"'},{name:"toLocaleString",shortDesc:"تعيد سلسلة نصية (محلية- تمثل البلد الحالي ) تمثل المصفوفة.",desc:"هذه الدالة فيها قليل من الجنون. تعيد سلسلة نصية (محلية- تمثل البلد الحالي ) تمثل المصفوفة وعناصرها. هذه الدالة مفيدة للتواريخ والعملات وكذلك بعض الاختصارات المحلية الغريبة, لذلك يستحسن مراجعة التوثيق الخاص بها",example:"let date = [new Date()];<br>\n        arr.toLocaleString();<br>\n        date.toLocaleString();<br>\n        console.log(arr, date);",output:'"5,1,8 12/26/2017, 6:54:49 م"'}],ordering:[{name:"reverse",shortDesc:"تعكس ترتيب عناصر المصفوفة",desc:"تعكس ترتيب عناصر المصفوفة بمكانهم - بحيث الأول يصبح الأخير والأخير يصبح الأول.",example:"arr.reverse();<br>\n        console.log(arr);",output:"[8, 1, 5]"},{name:"sort",shortDesc:"ترتيب عناصر المصفوفة",desc:"ترتب عناصر المصفوفة المحددة وترجع مصفوفة مرتبة.",example:"arr.sort();<br>\n        console.log(arr);",output:"[1, 5, 8]"}],other:[{name:"length",shortDesc:"معرفة طول المصفوفة",desc:"تعيد عدد العناصر في هذه المصفوفة.",example:"console.log(arr.length);",output:"3"},{name:"fill",shortDesc:"تعبية جميع عناصر المصفوفة بقيمة ثابتة",desc:"تقوم بتعبئة جميع عناصر المصفوفة ابتداءً من عنوان البداية إلى عنوان النهاية بقيم .",example:"arr.fill(2);<br>\n        console.log(arr);",output:"[2, 2, 2]"},{name:"copyWithin",shortDesc:"نسخ سلسلة من عناصر المصفوفة ضمن المصفوفة.",desc:"تقوم بنسخ سلسلة من عناصر المصوفة ضمن المصفوفة نفسها . بإمكانك تحديد العنصر الأخير فقط ( حيث العنصر الأول سيكون الافتراضي صفر ) أو بإمكانك تحديد العنصر الأول والأ×ير مفصولين بفاصلة , comma-separated.",example:"arr.copyWithin(1);<br>\n        console.log(arr);",output:"[5, 5, 8]"}],iterate:[{name:"forEach",shortDesc:"تنفيذ دالة سأقوم بإنشاء (for each) للعنصر",desc:"دالة الـ forEach() تقوم بتنفيذ دالة معينة مرة واحد لكل من عناصر المصفوفة.",example:"arr.forEach((element) => {<br>\n        <span>&nbsp;&nbsp;</span>console.log(element)<br>\n        });",output:"5<br>\n        1<br>\n        8"},{name:"map",shortDesc:" تقوم بإنشاء مصفوفة جديدة من كل عنصر بإستخدام دالة أقوم بإنشاءها",desc:"تقوم بإنشاء مصفوفة جديدة بإستخدام النتيجة  الراجعة من استدعاء دالة معينة على جميع العناصر في هذه المصفوفة.",example:"let map = arr.map(x => x + 1);<br>\n        console.log(map);",output:"[6, 2, 9]"},{name:"entries",shortDesc:"تنش عنصر تكرار  (iterator object)",desc:"تعيد عنصر تكرار جديد للمصفوفة والذي يحتوي على أزواج الـ key/value لكل عنوان (index) في هذه المصفوفة. توجد استخدامات كثيرة للتكرارات (iterators), وكذلك دوال أخرى تستخدم معها, مثل <code>values</code> و <code>keys</code>",example:"let iterator = arr.entries();<br>\n        console.log(iterator.next().value);",output:'[0, 5]<br>\n        <span class="comment">// the 0 is the index,</span><br>\n        <span class="comment">// the 5 is the first number</span>'}],find:{single:[{name:"includes",shortDesc:"تعيد إذا كان عنصر معين موجود",desc:"تقرر فيما إذا كانت مصفوفة معينة تحتوي على عنصر معين ، وتعيد true أو false بما يناسب الحالة.",example:"console.log(arr.includes(1));",output:"true"},{name:"indexOf",shortDesc:"العنوان الأول لعنصر معين",desc:"تعيد أول عنوان حيث يمكن العثور على عنصر معين في مصفوفة, أو -1 إذا لم يتم العثور عليه.",example:"console.log(arr.indexOf(5));",output:"0"},{name:"lastIndexOf",shortDesc:"العنوان الأخير لعنصر معين",desc:"تعيد آخر ( أكبر ) عنوان لعنصر معين ضمن مصفوفة مساوي للقيمة المحددة , أو -1 إذا كان غير موجود.",example:"console.log(arr.lastIndexOf(5));",output:"0"},{name:"find",shortDesc:"أول عنصر يطابق شرط معين",desc:"تعيد القيمة التي تم العثور عليها في المصوفة ، إذا وجد عنصر يطابق  لدالة الفحص المعينة أو غير معرف ( undefined ) إذا لم يتم العثور عليه. مشابهة لـ <code>findIndex()</code>, ولكنها تعيد العنصر عوضا عن العنوان (index).",example:"let isTiny = (el) => el < 2;<br>\n          console.log(arr.find(isTiny));",output:"1"},{name:"findIndex",shortDesc:"أول عنوان (index) للعصر الذي يطابق شرط معين",desc:"تعيد أول عنوان (index) لعنصر معين في مصفوفة إذا طابق دالة الفحص المعينة . أو  -1 إذا لم يطابق. مماثلة لـ <code>find()</code>, ولكنها تعيد العنوان (index) عوضا عن العنصر.",example:"let isBig = (el) => el > 6;<br>\n          console.log(arr.findIndex(isBig));",output:"2"},{name:"reduce",shortDesc:"قيمة بواسطة تصغير المصفوفة ، من البداية للنهاية",desc:"Apply a function against an accumulator and each value of the array (from left-to-right) as to reduce it to a single value.",example:"let reducer = (a, b) => a + b;<br>\n          <span>&nbsp;&nbsp;</span>console.log(arr.reduce(reducer));",output:"14"},{name:"reduceRight",shortDesc:"قيمة بواسطة تصغير المصفوفة ، من النهاية إلى البداية",desc:"Apply a function against an accumulator and each value of the array (from right-to-left) as to reduce it to a single value.",example:"[arr, [0, 1]].reduceRight((a, b) => {<br>\n          <span>&nbsp;&nbsp;</span>return a.concat(b)<br>\n          }, [])",output:"[0, 1, 5, 1, 8]"}],many:[{name:"filter",shortDesc:"قيم بناء على شرط أقوم بتحديده",desc:"تعيد مصفوفة جديد تحتوى على جميع عناصر هذه المصفوفة التي نتيجة دالة الترشيح true.",example:"let filtered = arr.filter(el => el > 4);<br>\n          console.log(filtered)",output:"[5, 8]"},{name:"every",shortDesc:"فيما إذا  كانت جميع العناصر تطابق شرط معين أو لا",desc:"تعيد (true) إذا كانت جميع القيم تطابق دالة الفحص.",example:"let isSmall = (el) => el < 10;<br>\n          console.log(arr.every(isSmall));",output:"true"},{name:"some",shortDesc:"فيما إذا طابق عنصر واحد على الأقل شرط معين أو لا",desc:"تعيد (true) إذا طابق على الأقل عنصر واحد من هذه المصفوفة لدالة الفحص.",example:"let biggerThan4 = (el) => el > 4;<br>\n          console.log(arr.some(biggerThan4));",output:"true"}]}}}},"7Duw":function(e,r){e.exports={short:"pt",long:"Portuguese",createdBy:"welll"}},"9ePW":function(e,r){},BYe3:function(e,r,n){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default={state:{selectedMethod:"",adding:[{name:"splice",shortDesc:"elemento(s) no array",desc:"Adiciona e/ou remove elementos do array.",example:"arr.splice(2, 0, 'tacos');<br>\n        console.log(arr);",output:"[5, 1, 'tacos', 8]"},{name:"push",shortDesc:"elementos no final do array",desc:"Adiciona um ou mais elementos no final do array e retorna o novo tamanho do array.",example:"arr.push(2);<br>\n        console.log(arr);",output:"[5, 1, 8, 2]"},{name:"unshift",shortDesc:"elementos no início do array",desc:"Adiciona um ou mais elementos no início do array e retorna o novo tamanho do array.",example:"arr.unshift(2, 7);<br>\n        console.log(arr);",output:"[2, 7, 5, 1, 8]"},{name:"concat",shortDesc:"este array a outro(s) array(s) e/ou valor(es)",desc:"Retorna um novo array incluindo este array concatenado de outro(s) arrays e/ou valor(es).",example:"let arr2 = ['a', 'b', 'c'];<br>\n        let arr3 = arr.concat(arr2);<br>\n        console.log(arr3);",output:"[5, 1, 8, 'a', 'b', 'c']"}],removing:[{name:"splice",shortDesc:"elemento(s) no array",desc:"Adiciona e/ou remove elementos do array.",example:"arr.splice(2, 1);<br>\n        console.log(arr);",output:"[5, 1]"},{name:"pop",shortDesc:"o último elemento do array",desc:"Remove o último elemento do array e retorna o elemento.",example:"arr.pop();<br>\n        console.log(arr);",output:"[5, 1]"},{name:"shift",shortDesc:"o primeiro elemento do array",desc:"Remove o primeiro elemento do array e retorna o elemento.",example:"arr.shift();<br>\n        console.log(arr);",output:"[1, 8]"},{name:"slice",shortDesc:"um ou mais elementos, mantendo o array original sem alterações",desc:"O método <code>slice()</code> retorna uma cópia rasa de parte do array em um novo objeto array. Você pode especificar apenas o índice final (deixando o índice inicial assumir o valor padrão zero), ou ambos, o índice inicial e o índice final separados por vírgula. O array original não será modificado.",example:"let slicedArr = arr.slice(1);<br>\n        console.log(arr);<br>\n        console.log(slicedArr);",output:"[5, 1, 8]<br>\n        [1, 8]"}],string:[{name:"join",shortDesc:"unir todos os elementos do array em uma string.",desc:"Une todos elementos do array em uma string. Você pode unir todos os itens sem delimitadores, ou com algum delimitador entre os elementos, <code>elements.join(' -\n          ')</code> retorna <code>foo-bar</code>",example:"console.log(arr.join());",output:'"5,1,8"'},{name:"toString",shortDesc:"retornar uma string representando o array.",desc:"Retorna uma string representando um array e seus elementos.",example:"console.log(arr.toString());",output:'"5,1,8"'},{name:"toLocaleString",shortDesc:"retornar uma string localizada representando o array.",desc:"Retorna uma string localizada representando um array e seus elementos. É muito útil para datas e moedas com características específicas do locale, recomendo consultar a documentação quando utilizar esta função.",example:"let date = [new Date()];<br>\n        const arrString = arr.toLocaleString();<br>\n        const dateString = date.toLocaleString();<br>\n        console.log(arrString, dateString);",output:'"5,1,8 12/26/2017, 6:54:49 PM"'}],ordering:[{name:"reverse",shortDesc:"inverter a ordem do array",desc:"Inverte a ordem dos elementos do array modificando o array — o primeiro elemento se torna o último, e o último se torna o primeiro.",example:"arr.reverse();<br>\n        console.log(arr);",output:"[8, 1, 5]"},{name:"sort",shortDesc:"ordenar os itens do array",desc:"Orderna os itens do array modificando o array e retorna o próprio array.",example:"arr.sort();<br>\n        console.log(arr);",output:"[1, 5, 8]"}],other:[{name:"length",shortDesc:"retornar o comprimento do array",desc:"Retorna o número de elementos existentes no array.",example:"console.log(arr.length);",output:"3"},{name:"fill",shortDesc:"preencher todos os elementos do array com um valor estático",desc:"Preenche todos os elementos do array de um índice inicial até um índice final com valores estáticos.",example:"arr.fill(2);<br>\n        console.log(arr);",output:"[2, 2, 2]"},{name:"copyWithin",shortDesc:"copiar parte do array dentro do mesmo array.",desc:"Copia parte do array para outra localização dentro deste mesmo array e o retorna, sem alterar seu tamanho. Você pode especificar o índice final (deixando o índice inicial assumir o valor padrão zero), ou ambos, o índice inicial e o índice final separados por vírgula",example:"arr.copyWithin(1);<br>\n        console.log(arr);",output:"[5, 5, 8]"}],iterate:[{name:"forEach",shortDesc:"executando uma função sobre cada elemento",desc:"O método <code>forEach()</code> executa uma função fornecida como parâmetro para cada elemento do array.",example:"arr.forEach((element) => {<br>\n        <span>&nbsp;&nbsp;</span>console.log(element)<br>\n        });",output:"5<br>\n        1<br>\n        8"},{name:"map",shortDesc:"criando um novo array a partir de cada elemento transformado via uma função",desc:"Cria um novo array com o resultado da chamada da função para cada elemento no array.",example:"let map = arr.map(x => x + 1);<br>\n        console.log(map);",output:"[6, 2, 9]"},{name:"entries",shortDesc:"criando um objeto iterator",desc:"Retorna um novo objeto do tipo Array Iterator que contém pares de chave/valor para cada índice do array. Há diversos usos para iterators, assim como há outros métodos análogos, como o método <code>values</code> e o método <code>keys</code>",example:"let iterator = arr.entries();<br>\n        console.log(iterator.next().value);",output:'[0, 5]<br>\n        <span class="comment">// o 0 é o índice,</span><br>\n        <span class="comment">// o 5 é o primeiro número</span>'}],find:{single:[{name:"includes",shortDesc:"se um dado elemento existe",desc:"Verifica se um array contém um certo elemento, retornando true ou false.",example:"console.log(arr.includes(1));",output:"true"},{name:"indexOf",shortDesc:"o primeiro índice de um elemento",desc:"Retorna o primeiro índice no qual um dado elemento pode ser encontrado no array, ou retorna -1 se não existe o item.",example:"console.log(arr.indexOf(5));",output:"0"},{name:"lastIndexOf",shortDesc:"o último índice de um elemento",desc:"Retorna o último (maior) índice no qual um dado elemento pode ser encontrado no array, ou retorna -1 se não existe o item.",example:"console.log(arr.lastIndexOf(5));",output:"0"},{name:"find",shortDesc:"o primeiro elemento que satisfaz a condição",desc:"Retorna o valor econtrado no array, se um elemento no array satisfaz o teste da função fornecida como parâmetro, ou retorna undefined se não encontrado. Similar ao método <code>findIndex()</code>, porém esta função retorna o item ao invés do índice.",example:"let isTiny = (el) => el < 2;<br>\n          console.log(arr.find(isTiny));",output:"1"},{name:"findIndex",shortDesc:"o primeiro índice de um elemento que satisfaz a condição",desc:"Retorna o índice do primeiro elemento no array que satisfaz o teste da função fornecida como parâmetro. Senão, o valor -1 é retornado. Similar ao método <code>find()</code>, porém esta função retorna o índice ao invés do item.",example:"let isBig = (el) => el > 6;<br>\n          console.log(arr.findIndex(isBig));",output:"2"},{name:"reduce",shortDesc:"um valor através da redução do array, início ao fim",desc:"Aplica uma função sobre um acumulador e cada elemento do array (da esquerda para direita) até reduzir a um único valor.",example:"let reducer = (a, b) => a + b;<br>\n          <span>&nbsp;&nbsp;</span>console.log(arr.reduce(reducer));",output:"14"},{name:"reduceRight",shortDesc:"um valor através da redução do array, fim ao ínicio",desc:"Aplica uma função sobre um acumulador e cada elemento do array (da direta para esquerda) até reduzir a um único valor.",example:"[arr, [0, 1]].reduceRight((a, b) => {<br>\n          <span>&nbsp;&nbsp;</span>return a.concat(b)<br>\n          }, [])",output:"[0, 1, 5, 1, 8]"}],many:[{name:"filter",shortDesc:"um valor baseado numa condição que eu criei",desc:"Cria um novo array com todos os elementos do array que satisfazem o teste da função fornecida como parâmetro.",example:"let filtered = arr.filter(el => el > 4);<br>\n          console.log(filtered)",output:"[5, 8]"},{name:"every",shortDesc:"se todos elementos satisfazem uma condição",desc:"Retorna true se todos elementos no array satisfazem o teste da função fornecida como parâmetro.",example:"let isSmall = (el) => el < 10;<br>\n          console.log(arr.every(isSmall));",output:"true"},{name:"some",shortDesc:"se pelo menos algum elemento satisfaz uma condição",desc:"Retorna true se pelo menos um elemento no array satisfaz o teste da função fornecida como parâmetro.",example:"let biggerThan4 = (el) => el > 4;<br>\n          console.log(arr.some(biggerThan4));",output:"true"}]}}}},C3Ql:function(e,r){e.exports={short:"ar",long:"Arabic",createdBy:"salahaa1"}},DERJ:function(e,r,n){var t={"./ar":"0iGN","./ar/":"0iGN","./ar/index":"0iGN","./ar/index.js":"0iGN","./ar/meta":"C3Ql","./ar/meta.json":"C3Ql","./bg":"WbDD","./bg/":"WbDD","./bg/index":"WbDD","./bg/index.js":"WbDD","./bg/meta":"WYaq","./bg/meta.json":"WYaq","./de":"I9nf","./de/":"I9nf","./de/index":"I9nf","./de/index.js":"I9nf","./de/meta":"dLso","./de/meta.json":"dLso","./en":"cACW","./en/":"cACW","./en/index":"cACW","./en/index.js":"cACW","./en/meta":"mJJP","./en/meta.json":"mJJP","./es":"lx7K","./es/":"lx7K","./es/index":"lx7K","./es/index.js":"lx7K","./es/meta":"/TCW","./es/meta.json":"/TCW","./fr":"YsDL","./fr/":"YsDL","./fr/index":"YsDL","./fr/index.js":"YsDL","./fr/meta":"W+34","./fr/meta.json":"W+34","./index":"vdRI","./index.js":"vdRI","./pt":"BYe3","./pt/":"BYe3","./pt/index":"BYe3","./pt/index.js":"BYe3","./pt/meta":"7Duw","./pt/meta.json":"7Duw","./zh":"c7LI","./zh/":"c7LI","./zh/index":"c7LI","./zh/index.js":"c7LI"};function a(e){return n(o(e))}function o(e){var r=t[e];if(!(r+1))throw new Error("Cannot find module '"+e+"'.");return r}a.keys=function(){return Object.keys(t)},a.resolve=o,e.exports=a,a.id="DERJ"},I9nf:function(e,r,n){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default={state:{selectedMethod:"",adding:[{name:"splice",shortDesc:"Elemente in einen Array",desc:"Fügt Elemente zu einem Array hinzu oder entfernt welche.",example:"arr.splice(2, 0, 'tacos');<br>\n        console.log(arr);",output:"[5, 1, 'tacos', 8]"},{name:"push",shortDesc:"Elemente an das Ende eines Arrays",desc:"Hängt ein oder mehrere Elemente an einen Array an und gibt die neue Länge des Arrays zurück.",example:"arr.push(2);<br>\n        console.log(arr);",output:"[5, 1, 8, 2]"},{name:"unshift",shortDesc:"Elemente an den Anfang eines Arrays",desc:"Fügt ein oder mehrere Elemente an den Anfang eines Arrays an und gibt die neue Länge des Arrays zurück.",example:"arr.unshift(2, 7);<br>\n        console.log(arr);",output:"[2, 7, 5, 1, 8]"},{name:"concat",shortDesc:"diesen Array zu anderen Arrays und/oder Werten.",desc:"Gibt einen neuen Array bestehend aus diesem Array zusammen mit anderen Array(s) und/oder Werten zurück.",example:"let arr2 = ['a', 'b', 'c'];<br>\n        let arr3 = arr.concat(arr2);<br>\n        console.log(arr3);",output:"[5, 1, 8, 'a', 'b', 'c']"}],removing:[{name:"splice",shortDesc:"Elemente aus einem Array",desc:"Fügt Elemente einem Array hinzu und/oder entfernt welche.",example:"arr.splice(2, 1);<br>\n        console.log(arr);",output:"[5, 1]"},{name:"pop",shortDesc:"das letzte Element eines Arrays",desc:"Entfernt das letzte Element eines Arrays und gibt es zurück.",example:"arr.pop();<br>\n        console.log(arr);",output:"[5, 1]"},{name:"shift",shortDesc:"das erste Element eines Arrays",desc:"Entfernt das erste Element eines Arrays und gibt es zurück.",example:"arr.shift();<br>\n        console.log(arr);",output:"[1, 8]"},{name:"slice",shortDesc:"mindestens ein Element für eine Aufgabe, ohne den eigentlichen Array zu verändern",desc:"Die <code>slice()</code>-Methode schreibt eine flache Kopie eines Teils des Arrays in ein neues Array-Objekt. Man kann entweder nur den Index für das letzte Elemente (dann wird der Index für das erste Element auf 0 gesetzt) oder sowohl den Index für das erste und das letzte Element kommagetrennt angeben. Der Original-Array wird nicht verändert.",example:"let slicedArr = arr.slice(1);<br>\n        console.log(arr);<br>\n        console.log(slicedArr);",output:"[5, 1, 8]<br>\n        [1, 8]"}],string:[{name:"join",shortDesc:"alle Elemente eines Arrays in einen String zusammenführen.",desc:"Führt alle Elemente eines Arrays in einem String zusammen. Man kann die Elemente entweder mit oder ohne Trennzeichen zusammenführen. <code>elements.join(' -\n          ')</code> gibt <code>foo-bar</code>",example:"console.log(arr.join());",output:'"5,1,8"'},{name:"toString",shortDesc:"einen String, der den Array repräsentiert, zurückgegeben.",desc:"Gibt einen String, der den Array und alle darin enthaltenen Elemente beinhaltet, zurück.",example:"console.log(arr.toString());",output:'"5,1,8"'},{name:"toLocaleString",shortDesc:"einen an die Sprache angepassten String, der den Array repräsentiert, zurückgeben.",desc:"Diese Methode ist ein bisschen komisch. Sie gibt einen an die Sprache angepassten String, der den Array und alle seine Elemente beinhaltet, zurück. Dies ist sehr nützlich für Datumsangaben und Währungen, hat aber einige seltsame Verhaltensweisen, so dass du am besten die genaue Dokumentation durchlesen solltest.",example:"let date = [new Date()];<br>\n        const arrString = arr.toLocaleString();<br>\n        const dateString = date.toLocaleString();<br>\n        console.log(arrString, dateString);",output:'"5,1,8 12/26/2017, 6:54:49 PM"'}],ordering:[{name:"reverse",shortDesc:"die Reihenfolge eines Arrays umkehren",desc:"Kehrt die Reihenfolge der Elemente in einem Array um, das erste wird zum letzten Element, das letzte zum ersten.",example:"arr.reverse();<br>\n        console.log(arr);",output:"[8, 1, 5]"},{name:"sort",shortDesc:"die Elemente in einem Array sortieren",desc:"Sortiert die Elemente eines Arrays in aufsteigender Reihenfolge.",example:"arr.sort();<br>\n        console.log(arr);",output:"[1, 5, 8]"}],other:[{name:"length",shortDesc:"die Länge eines Arrays herausfinden",desc:"Gibt die Zahl aller Elemente in einem Array zurück.",example:"console.log(arr.length);",output:"3"},{name:"fill",shortDesc:"allen Elementen eines Arrays einen bestimmten Wert zuweisen",desc:"Weist alle Elementen in einem Array vom Start- bis zum Endindex einen bestimmten Wert zu.",example:"arr.fill(2);<br>\n        console.log(arr);",output:"[2, 2, 2]"},{name:"copyWithin",shortDesc:"einen Folge von Elementen des Arrays innerhalb des Arrays kopieren.",desc:"Kopiert eine Reihe von Elementen des Arrays innerhalb des Arrays. Du kannst entweder nur das letzte Element (dann wird der Startindex auf 0 gesetzt) oder sowohl das erste als auch das letzte kommagetrennt festlegen.",example:"arr.copyWithin(1);<br>\n        console.log(arr);",output:"[5, 5, 8]"}],iterate:[{name:"forEach",shortDesc:"wobei ich eine selbstdefinierte Funktion auf jedes Elemente anwende",desc:"Die <code>forEach()</code>-Methode wendet eine gegebene Funktion auf jedes Element im Array an.",example:"arr.forEach((element) => {<br>\n        <span>&nbsp;&nbsp;</span>console.log(element)<br>\n        });",output:"5<br>\n        1<br>\n        8"},{name:"map",shortDesc:"einen neuen Array basierend auf einer auf alle Elemente angewendeten Funktion",desc:"Erstellt einen neuen Array, dessen Elemente auf dem gegebenem Array, auf die eine gegebene Funktion angewendet wurde, basieren.",example:"let map = arr.map(x => x + 1);<br>\n        console.log(map);",output:"[6, 2, 9]"},{name:"entries",shortDesc:"ein Iterator-Objekt erstellen",desc:"Gibt ein Iterator-Objekt zurück, das zu jedem Index den Wert des Elements beinhaltet. Es gibt eine Vielzahl an Anwendungen für Iteratoren und andere Methoden, die in Verbindung mit Iteratoren genutzt werden, wie <code>key</code> oder <code>value</code>.",example:"let iterator = arr.entries();<br>\n        console.log(iterator.next().value);",output:'[0, 5]<br>\n        <span class="comment">// the 0 is the index,</span><br>\n        <span class="comment">// the 5 is the first number</span>'}],find:{single:[{name:"includes",shortDesc:", ob ein bestimmtes Element im Array vorkommt",desc:"Existiert ein bestimmtes Element im Array, wird true, ansonsten false, zurückgegeben.",example:"console.log(arr.includes(1));",output:"true"},{name:"indexOf",shortDesc:", was der erste Index eines Elements ist",desc:"Gibt den ersten Index, an dem das Element gefunden werden kann, zurück, oder -1, falls es nicht vorkommt.",example:"console.log(arr.indexOf(5));",output:"0"},{name:"lastIndexOf",shortDesc:"den letzten Index eines Elements",desc:"Gibt den letzten (größten) Index zurück, an dem ein Element gefunden werden kann, oder -1, falls es nicht im Array vorkommt.",example:"console.log(arr.lastIndexOf(5));",output:"0"},{name:"find",shortDesc:"das erste Element, das eine Bedingung erfüllt",desc:"Gibt das erste gefundene Element aus dem Array zurück, das die gegebene Bedingung erfüllt, wenn mindestens ein Element die gegebene Bedingung erfüllt, sonst wird undefined zurückgegeben. Ähnlich zu <code>findIndex()</code>, aber <code>find()</code> gibt das Element und nicht den Index zurück.",example:"let isTiny = (el) => el < 2;<br>\n          console.log(arr.find(isTiny));",output:"1"},{name:"findIndex",shortDesc:"den ersten Index eines Elements, das eine Bedingung erfüllt",desc:"Gibt den Index des ersten Elements im Array, das die gegebene Bedingung erfüllt, zurück. Erfüllt kein Element die Bedingung, wird -1 zurückgegeben. Ähnlich zu <code>find()</code>, aber <code>findIndex()</code> gibt den Index statt des Elements zurück.",example:"let isBig = (el) => el > 6;<br>\n          console.log(arr.findIndex(isBig));",output:"2"},{name:"reduce",shortDesc:"den Array auf einen einzigen Wert reduzieren, von links nach rechts",desc:"Reduziert das Array auf einen einzigen Wert, indem es jeweils zwei Elemente (von links nach rechts) durch eine angegebene Funktion reduziert.",example:"let reducer = (a, b) => a + b;<br>\n          <span>&nbsp;&nbsp;</span>console.log(arr.reduce(reducer));",output:"14"},{name:"reduceRight",shortDesc:"den Array auf einen einzigen Wert reduzieren, von rechts nach links",desc:"Wendet eine Funktion gegen einen Akkumulator auf jeden Wert des Arrays (von rechts nach links) an und reduziert es um einen einzelnen Wert.",example:"[arr, [0, 1]].reduceRight((a, b) => {<br>\n          <span>&nbsp;&nbsp;</span>return a.concat(b)<br>\n          }, [])",output:"[0, 1, 5, 1, 8]"}],many:[{name:"filter",shortDesc:"Werte basierend auf einer selbsterstellten Bedingung finden.",desc:"Erstellt einen neuen Array mit allen Elementen des Strings, die eine gegebene Bedingung erfüllen.",example:"let filtered = arr.filter(el => el > 4);<br>\n          console.log(filtered)",output:"[5, 8]"},{name:"every",shortDesc:"herausfinden, ob alle Elemente des Arrays eine Bedingung erfüllen.",desc:"Gibt true zurück, wenn alle Elemente des Arrays eine gegebene Bedingung erfüllen.",example:"let isSmall = (el) => el < 10;<br>\n          console.log(arr.every(isSmall));",output:"true"},{name:"some",shortDesc:"herausfinden, ob mindestens ein Element des Arrays eine Bedingung erfüllt",desc:"Gibt true zurück, wenn zumindest ein Element des Arrays eine gegebene Bedingung erfüllt.",example:"let biggerThan4 = (el) => el > 4;<br>\n          console.log(arr.some(biggerThan4));",output:"true"}]}}}},KIbl:function(e,r){},MqxC:function(e,r){},NHnr:function(e,r,n){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var t=n("7+uW"),a=n("Dd8w"),o=n.n(a),s=n("vdRI"),l=(n("NYxO"),{name:"method-base",props:{urlPath:{type:String,default:"length"}}}),i={render:function(){var e=this.$createElement,r=this._self._c||e;return r("div",[r("h2",[this._t("title")],2),this._v(" "),r("p",{staticClass:"desc"},[this._t("desc")],2),this._v(" "),r("p",{staticClass:"link"},[r("em",[r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/"+this.urlPath,target:"_blank"}},[this._v("see the docs →")])])])])},staticRenderFns:[]};var c={components:{MethodBase:n("VU/8")(l,i,!1,function(e){n("9ePW")},"data-v-03de1116",null).exports},props:{methodType:{type:String,required:!1},options:{type:Array,required:!0}},data:function(){return{selected:""}},computed:{isSelected:function(){return this.$store.state.selectedMethod}},watch:{selected:function(){this.$store.commit("selectionMethod",this.selected)}}},d={render:function(){var e=this,r=e.$createElement,n=e._self._c||r;return n("div",[n("p",[n("label",{attrs:{for:"methodoptions"}},[e._v(e._s(e.$t("methodOptions","I need to"))+" "+e._s(e.methodType&&e.$t("methodTypes."+e.methodType)))]),e._v(" "),n("select",{directives:[{name:"model",rawName:"v-model",value:e.selected,expression:"selected"}],attrs:{id:"methodoptions",name:"select"},on:{change:function(r){var n=Array.prototype.filter.call(r.target.options,function(e){return e.selected}).map(function(e){return"_value"in e?e._value:e.value});e.selected=r.target.multiple?n:n[0]}}},[n("option",{attrs:{value:"",disabled:"",selected:""}},[e._v("...")]),e._v(" "),e._l(e.options,function(r){return n("option",{key:r.desc,domProps:{value:r}},[e._v("\n        "+e._s(r.shortDesc)+"\n      ")])})],2)]),e._v(" "),n("method-base",{directives:[{name:"show",rawName:"v-show",value:e.isSelected,expression:"isSelected"}],attrs:{urlPath:e.selected.name}},["length"===e.selected.name?n("span",{attrs:{slot:"title"},slot:"title"},[e._v("Array."+e._s(e.selected.name))]):n("span",{attrs:{slot:"title"},slot:"title"},[e._v("Array."+e._s(e.selected.name)+"()")]),e._v(" "),n("span",{attrs:{slot:"desc"},domProps:{innerHTML:e._s(e.selected.desc)},slot:"desc"})])],1)},staticRenderFns:[]};var u={components:{MethodChoice:n("VU/8")(c,d,!1,function(e){n("V7ti")},"data-v-c134480e",null).exports},data:function(){return{selectedFilter:"",selectedFind:""}},computed:o()({},function(e){var r={};return e.forEach(function(e){return r[e]=function(r){var n=r.$store.state.curLanguage;return r.$store.state[n][e]}}),r}(["adding","removing","iterate","string","ordering","other","find"]),{options:function(){return this.$t("primaryOptions")}}),watch:{selectedFilter:function(){this.$store.commit("resetSelection")},selectedFind:function(){this.$store.commit("resetSelection")}}},m={render:function(){var e=this,r=e.$createElement,n=e._self._c||r;return n("div",[n("label",{attrs:{for:"firstmethod"}},[e._v(e._s(e.$t("firstMethod","I have an array, I would like to")))]),e._v(" "),n("select",{directives:[{name:"model",rawName:"v-model",value:e.selectedFilter,expression:"selectedFilter"}],attrs:{id:"firstmethod",name:"select"},on:{change:function(r){var n=Array.prototype.filter.call(r.target.options,function(e){return e.selected}).map(function(e){return"_value"in e?e._value:e.value});e.selectedFilter=r.target.multiple?n:n[0]}}},[n("option",{attrs:{value:"",disabled:"",selected:""}},[e._v("...")]),e._v(" "),e._l(e.options,function(r){return n("option",{key:r.name,domProps:{value:r}},[e._v("\n      "+e._s(r)+"\n    ")])})],2),e._v(" "),e.selectedFilter===e.options[0]?n("div",[n("method-choice",{attrs:{options:e.adding,methodType:"add"}})],1):e.selectedFilter===e.options[1]?n("div",[n("method-choice",{attrs:{options:e.removing,methodType:"remove"}})],1):e.selectedFilter===e.options[3]?n("div",[n("method-choice",{attrs:{options:e.iterate,methodType:"iterate by"}})],1):e.selectedFilter===e.options[2]?n("div",[n("p",[n("label",{attrs:{for:"findmethod"}},[e._v(e._s(e.$t("findMethod","I'm trying to find")))]),e._v(" "),n("select",{directives:[{name:"model",rawName:"v-model",value:e.selectedFind,expression:"selectedFind"}],attrs:{id:"findMethod",name:"select"},on:{change:function(r){var n=Array.prototype.filter.call(r.target.options,function(e){return e.selected}).map(function(e){return"_value"in e?e._value:e.value});e.selectedFind=r.target.multiple?n:n[0]}}},[n("option",{attrs:{value:"",disabled:"",selected:""}},[e._v("...")]),e._v(" "),n("option",{attrs:{value:"single"}},[e._v(e._s(e.$t("singleItem","one item")))]),e._v(" "),n("option",{attrs:{value:"many"}},[e._v(e._s(e.$t("manyItems","one or many items")))])])]),e._v(" "),"single"===e.selectedFind?n("div",[n("method-choice",{attrs:{options:e.find.single,methodType:"find"}})],1):"many"===e.selectedFind?n("div",[n("method-choice",{attrs:{options:e.find.many,methodType:"find"}})],1):e._e()]):e.selectedFilter===e.options[5]?n("div",[n("method-choice",{attrs:{options:e.ordering}})],1):e.selectedFilter===e.options[4]?n("div",[n("method-choice",{attrs:{options:e.string}})],1):e.selectedFilter===e.options[6]?n("div",[n("method-choice",{attrs:{options:e.other}})],1):e._e()])},staticRenderFns:[]};var p=n("VU/8")(u,m,!1,function(e){n("U4l+")},"data-v-2d759af0",null).exports,h={render:function(){var e=this.$createElement,r=this._self._c||e;return r("div",[r("a",{staticClass:"github-corner",attrs:{href:"https://github.com/sdras/array-explorer","aria-label":"View source on Github"}},[r("svg",{staticStyle:{fill:"#FD6C6C",color:"#fff",position:"absolute",top:"0",border:"0",right:"0"},attrs:{width:"80",height:"80",viewBox:"0 0 250 250","aria-hidden":"true"}},[r("path",{attrs:{d:"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"}}),r("path",{staticClass:"octo-arm",staticStyle:{"transform-origin":"130px 106px"},attrs:{d:"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2",fill:"currentColor"}}),r("path",{staticClass:"octo-body",attrs:{d:"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z",fill:"currentColor"}})])])])},staticRenderFns:[]};var g=n("VU/8")(null,h,!1,function(e){n("VPtu")},"data-v-ba6985fe",null).exports,f={data:function(){return{selectedLanguage:this.$store.state.curLanguage,languages:this.$store.state.languages}},watch:{selectedLanguage:function(e){console.log("new lang",e),this.$store.commit("changeLanguage",e),this.$store.commit("resetSelection")}}},b={render:function(){var e=this,r=e.$createElement,n=e._self._c||r;return n("div",{staticClass:"localization-dropdown"},[e._v("\n  Language: \n  "),n("select",{directives:[{name:"model",rawName:"v-model",value:e.selectedLanguage,expression:"selectedLanguage"}],on:{change:function(r){var n=Array.prototype.filter.call(r.target.options,function(e){return e.selected}).map(function(e){return"_value"in e?e._value:e.value});e.selectedLanguage=r.target.multiple?n:n[0]}}},e._l(e.languages,function(r,t){return n("option",{domProps:{value:t}},[e._v(e._s(r.long))])}))])},staticRenderFns:[]};var y=n("VU/8")(f,b,!1,function(e){n("vF68")},"data-v-bc478c74",null).exports,v=n("+Uzz"),x={methods:{typeOut:function(){var e=new SplitText(this.$refs.ex,{type:"chars"}),r=new SplitText(this.$refs.ex2,{type:"chars"}),n=new v.TimelineMax;n.add("start"),n.to(this.$refs.ex,.1,{opacity:1}),n.staggerFromTo(e.chars,.1,{opacity:0,scale:0,color:"#aeded4",transformOrigin:"50% 50%"},{opacity:1,scale:1,color:"#fff",transformOrigin:"50% 50%",ease:v.Power4.easeOut},.03,"start+=0"),n.staggerTo(e.chars,.1,{color:"#aeded4",ease:v.Back.easeIn},.03,"start+=0.1"),n.to(this.$refs.ex2,.1,{opacity:1}),n.staggerFromTo(r.chars,.1,{opacity:0,scale:0,color:"#aeded4",transformOrigin:"50% 50%"},{opacity:1,scale:1,color:"#fff",transformOrigin:"50% 50%",ease:v.Power4.easeOut},.03,"start1+=0"),n.staggerTo(r.chars,.1,{color:"#ecc2a4",ease:v.Back.easeIn},.03,"start1+=0.1")}},computed:{selectedUsage:function(){return this.$store.state.selectedMethod}},watch:{selectedUsage:function(){var e=this;this.selectedUsage&&(TweenMax.set([this.$refs.ex,this.$refs.ex2],{opacity:0}),setTimeout(function(){e.typeOut()},500))}}},D={render:function(){var e=this.$createElement,r=this._self._c||e;return r("aside",[r("div",{staticClass:"usage-code usage1"},[r("p",[r("span",[this._v("let arr = [5, 1, 8];")]),r("br"),this._v(" "),this.selectedUsage?r("span",{ref:"ex",staticClass:"exampleoutput",domProps:{innerHTML:this._s(this.selectedUsage.example)}}):this._e()])]),this._v(" "),this.selectedUsage?r("div",{staticClass:"usage2"},[r("h3",{staticStyle:{"margin-top":"50px"}},[this._v("Output")]),this._v(" "),r("div",{staticClass:"usage-code"},[r("p",[r("span",{ref:"ex2",staticClass:"exampleoutput2",domProps:{innerHTML:this._s(this.selectedUsage.output)}})])])]):this._e()])},staticRenderFns:[]};var A={components:{AppMethodPrimary:p,AppGithubCorner:g,LocaleSwitcher:y,AppCode:n("VU/8")(x,D,!1,function(e){n("MqxC")},null,null).exports}},S={render:function(){var e=this.$createElement,r=this._self._c||e;return r("div",{attrs:{id:"app"}},[r("app-github-corner"),this._v(" "),r("LocaleSwitcher"),this._v(" "),r("main",[r("section",{staticClass:"a"},[r("h1",[this._v("Array Explorer")]),this._v(" "),this._m(0),this._v(" "),r("app-method-primary")],1),this._v(" "),r("section",{staticClass:"b"},[r("h3",{staticClass:"usage"},[this._v("Usage")]),this._v(" "),r("app-code")],1)])],1)},staticRenderFns:[function(){var e=this.$createElement,r=this._self._c||e;return r("p",{staticClass:"subtitle"},[r("em",[this._v("Find the array method you need without digging through the docs")])])}]};var E=n("VU/8")(A,S,!1,function(e){n("KIbl")},null,null).exports,w=n("P6sg");t.a.use(w.a),t.a.config.productionTip=!1,new t.a({el:"#app",store:s.store,template:"<App/>",components:{App:E}})},"U4l+":function(e,r){},V7ti:function(e,r){},VPtu:function(e,r){},"W+34":function(e,r){e.exports={short:"fr",long:"French",createdBy:"julienmartin"}},WYaq:function(e,r){e.exports={short:"bg",long:"Bulgarian",createdBy:"imbyurhan"}},WbDD:function(e,r,n){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default={state:{selectedMethod:"",adding:[{name:"splice",shortDesc:"елемент(и) в масив",desc:"Добавя и/или премахва елементи от масив.",example:"arr.splice(2, 0, 'tacos');<br>\n        console.log(arr);",output:"[5, 1, 'tacos', 8]"},{name:"push",shortDesc:"елементи в края на масива",desc:"Добавя един или повече елементи в края на масива и връща новата дължина на масива.",example:"arr.push(2);<br>\n        console.log(arr);",output:"[5, 1, 8, 2]"},{name:"unshift",shortDesc:"елементи в началото на масива",desc:"Добавя един или повече елементи в началото на масива и връща новата дължина на масива.",example:"arr.unshift(2, 7);<br>\n        console.log(arr);",output:"[2, 7, 5, 1, 8]"},{name:"concat",shortDesc:"този масив в друг масив(и) и/или стойност(и)",desc:"Връща нов масив, съставен от този масив, свързан с друг масив(и) и/или стойност(и).",example:"let arr2 = ['a', 'b', 'c'];<br>\n        let arr3 = arr.concat(arr2);<br>\n        console.log(arr3);",output:"[5, 1, 8, 'a', 'b', 'c']"}],removing:[{name:"splice",shortDesc:"елемент(и) от масив",desc:"Добавя и/или премахва елементи от масив.",example:"arr.splice(2, 1);<br>\n        console.log(arr);",output:"[5, 1]"},{name:"pop",shortDesc:"последният елемент на масива",desc:"Премахва последния елемент от масив и връща този елемент.",example:"arr.pop();<br>\n        console.log(arr);",output:"[5, 1]"},{name:"shift",shortDesc:"първият елемент на масива",desc:"Премахва първия елемент от масив и връща този елемент.",example:"arr.shift();<br>\n        console.log(arr);",output:"[1, 8]"},{name:"slice",shortDesc:"едно или повече елементи за употреба, оставяйки масива, както е",desc:"Методът <code>slice()</code> връща плитко копие на част от масив в нов обект от масив. Можете да посочите или само крайния елемент (откъдето започва да е по подразбиране до нула) или и началото, и края, разделени със запетая. Оригиналният масив няма да бъде променен.",example:"let slicedArr = arr.slice(1);<br>\n        console.log(arr);<br>\n        console.log(slicedArr);",output:"[5, 1, 8]<br>\n        [1, 8]"}],string:[{name:"join",shortDesc:"присъединете всички елементи на масива към низ",desc:"Присъединява всички елементи на масива към низ. Можете да ги присъедините заедно, както е или с нещо между тях, <code>elements.join ('-')</code> ви дава <code>foo-bar</code>",example:"console.log(arr.join());",output:'"5,1,8"'},{name:"toString",shortDesc:"връща низ, представляващ масива",desc:"Връща низ, представляващ масива и неговите елементи.",example:"console.log(arr.toString());",output:'"5,1,8"'},{name:"toLocaleString",shortDesc:"връща локализиран низ, представляващ масива",desc:"Това е малко вълшебство. Връща локализиран низ, представляващ масива и неговите елементи. Това е много полезно за дати и валута и има някои странни местни абстракции, така че най-добре да се консултирате с документите, когато го използвате.",example:"let date = [new Date()];<br>\n        const arrString = arr.toLocaleString();<br>\n        const dateString = date.toLocaleString();<br>\n        console.log(arrString, dateString);",output:'"5,1,8 12/26/2017, 6:54:49 PM"'}],ordering:[{name:"reverse",shortDesc:"обръщане на реда на масива",desc:"Обръща реда на елементите на масив на място - първият става последният и последният става първият.",example:"arr.reverse();<br>\n        console.log(arr);",output:"[8, 1, 5]"},{name:"sort",shortDesc:"сортирайте елементите на масива",desc:"Сортира елементите на масив на място и връща масива.",example:"arr.sort();<br>\n        console.log(arr);",output:"[1, 5, 8]"}],other:[{name:"length",shortDesc:"намерете дължината на масива",desc:"Връща броя елементи в този масив.",example:"console.log(arr.length);",output:"3"},{name:"fill",shortDesc:"попълнете всички елементи на масива със статична стойност",desc:"Запълва всички елементи на масива от начален индекс до крайния индекс със статична стойност.",example:"arr.fill(2);<br>\n        console.log(arr);",output:"[2, 2, 2]"},{name:"copyWithin",shortDesc:"копирайте последователност от масивни елементи в масива.",desc:"Копира последователност от масивни елементи в масива. Можете да посочите или само крайния елемент (откъдето започва да е по подразбиране до нула) или и началото, и края, разделени със запетая.",example:"arr.copyWithin(1);<br>\n        console.log(arr);",output:"[5, 5, 8]"}],iterate:[{name:"forEach",shortDesc:"изпълнявайки функция, която ще създам за всеки елемент",desc:"Методът forEach() изпълнява една предоставена функция веднъж за всеки елемент на масива.",example:"arr.forEach((element) => {<br>\n        <span>&nbsp;&nbsp;</span>console.log(element)<br> \n        });",output:"5<br>\n        1<br>\n        8"},{name:"map",shortDesc:"създаване на нов масив от всеки елемент с функция, която създавам",desc:"Създава нов масив с резултатите от извикването на дадена функция на всеки елемент в този масив.",example:"let map = arr.map(x => x + 1);<br>\n        console.log(map);",output:"[6, 2, 9]"},{name:"entries",shortDesc:"създаване на обект итератор",desc:"Връща нов обект от Array Iterator, който съдържа двойките ключ/стойност за всеки индекс в масива. Има много приложения за итераторите, както и други методи, използвани с него, като <code>values</code> и <code>keys</code>",example:"let iterator = arr.entries();<br>\n        console.log(iterator.next().value);",output:'[0, 5]<br>\n        <span class="comment">// the 0 is the index,</span><br>\n        <span class="comment">// the 5 is the first number</span>'}],find:{single:[{name:"includes",shortDesc:"ако има определен елемент",desc:"Определя дали даден масив съдържа определен елемент, връщайки се true или false, както е подходящо.",example:"console.log(arr.includes(1));",output:"true"},{name:"indexOf",shortDesc:"първият индекс на конкретен елемент",desc:"Връща първия индекс, при който даден елемент може да бъде намерен в масива, или -1, ако то не присъства.",example:"console.log(arr.indexOf(5));",output:"0"},{name:"lastIndexOf",shortDesc:"последния индекс на конкретен елемент",desc:"Връща последния (най-голям) индекс на елемент в масива, равен на зададената стойност, или -1, ако не е намерен.",example:"console.log(arr.lastIndexOf(5));",output:"0"},{name:"find",shortDesc:"първият елемент, който удовлетворява едно условие",desc:"Връща намерената стойност в масива, ако елемент в масива удовлетворява предоставената функция за тестване или недефинирана, ако не е намерена. Подобно на <code>findIndex()</code>, но връща елемента вместо индекса.",example:"let isTiny = (el) => el < 2;<br>\n          console.log(arr.find(isTiny));",output:"1"},{name:"findIndex",shortDesc:"първият индекс на елемент, който отговаря на дадено условие",desc:"Връща индекса на първия елемент в масива, който удовлетворява предоставената функция за тестване. В противен случай -1 се връща. Подобно на <code>find()</code>, но връща индекса вместо елемента.",example:"let isBig = (el) => el > 6;<br>\n          console.log(arr.findIndex(isBig));",output:"2"},{name:"reduce",shortDesc:"стойност чрез намаляване на масива, започни за да свършиш",desc:"Прилагайте функция срещу акумулатор и всяка стойност на масива (от ляво на дясно), за да го намалите до единична стойност.",example:"let reducer = (a, b) => a + b;<br>\n          <span>&nbsp;&nbsp;</span>console.log(arr.reduce(reducer));",output:"14"},{name:"reduceRight",shortDesc:"стойност чрез намаляване на масива, завърши за да започнеш",desc:"Прилагайте функция срещу акумулатор и всяка стойност на масива (от дясно на ляво), за да го намалите до единична стойност.",example:"[arr, [0, 1]].reduceRight((a, b) => {<br>\n          <span>&nbsp;&nbsp;</span>return a.concat(b)<br>\n          }, [])",output:"[0, 1, 5, 1, 8]"}],many:[{name:"filter",shortDesc:"стойности въз основа на състояние, което създавам",desc:"Създава нов масив с всички елементи на този масив, за които предоставената филтрираща функция връща true.",example:"let filtered = arr.filter(el => el > 4);<br>\n          console.log(filtered)",output:"[5, 8]"},{name:"every",shortDesc:"независимо от това дали всеки елемент отговаря на дадено условие",desc:"Връща true, ако всеки елемент в този масив удовлетворява предоставената функция за тестване.",example:"let isSmall = (el) => el < 10;<br>\n          console.log(arr.every(isSmall));",output:"true"},{name:"some",shortDesc:"независимо дали поне един елемент отговаря на дадено условие",desc:"Връща true, ако поне един елемент в този масив отговаря на предоставената функция за тестване.",example:"let biggerThan4 = (el) => el > 4;<br>\n          console.log(arr.some(biggerThan4));",output:"true"}]}}}},YsDL:function(e,r,n){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default={state:{selectedMethod:"",adding:[{name:"splice",shortDesc:"un ou des éléments à un tableau",desc:"Modifie le contenu d'un tableau en retirant des éléments et/ou en ajoutant de nouveaux éléments.",example:"arr.splice(2, 0, 'tacos');<br>\n        console.log(arr);",output:"[5, 1, 'tacos', 8]"},{name:"push",shortDesc:"un ou des éléments à la fin d'un tableau",desc:"Ajoute un ou plusieurs éléments à la fin d'un tableau et retourne la nouvelle taille du tableau.",example:"arr.push(2);<br>\n        console.log(arr);",output:"[5, 1, 8, 2]"},{name:"unshift",shortDesc:"un ou des éléments au début d'un tableau",desc:"Ajoute un ou plusieurs éléments au début d'un tableau et renvoie la nouvelle longueur du tableau.",example:"arr.unshift(2, 7);<br>\n        console.log(arr);",output:"[2, 7, 5, 1, 8]"},{name:"concat",shortDesc:"ce tableau à d'autre(s) tableau(x) et/ou valeur(s)",desc:"Renvoie un nouveau tableau qui est le résultat de la concaténation d'un ou plusieurs tableaux.",example:"let arr2 = ['a', 'b', 'c'];<br>\n        let arr3 = arr.concat(arr2);<br>\n        console.log(arr3);",output:"[5, 1, 8, 'a', 'b', 'c']"}],removing:[{name:"splice",shortDesc:"un ou des éléments à un tableau",desc:"Modifie le contenu d'un tableau en retirant des éléments et/ou en ajoutant de nouveaux éléments.",example:"arr.splice(2, 1);<br>\n        console.log(arr);",output:"[5, 1]"},{name:"pop",shortDesc:"le dernier élément d'un tableau",desc:"Supprime le dernier élément d'un tableau et retourne cet élément.",example:"arr.pop();<br>\n        console.log(arr);",output:"[5, 1]"},{name:"shift",shortDesc:"le premier élément d'un tableau",desc:"Supprime le premier élément d'un tableau et retourne cet élément.",example:"arr.shift();<br>\n        console.log(arr);",output:"[1, 8]"},{name:"slice",shortDesc:"un ou plusieurs éléments successifs, sans modifier le tableau d'origine",desc:"Renvoie un objet tableau, contenant une copie superficielle (shallow copy) d'une portion du tableau d'origine, la portion est définie par un indice de début et un indice de fin (exclus). Le tableau original ne sera pas modifié.",example:"let slicedArr = arr.slice(1);<br>\n        console.log(arr);<br>\n        console.log(slicedArr);",output:"[5, 1, 8]<br>\n        [1, 8]"}],string:[{name:"join",shortDesc:"de concaténer tous les éléments d'un tableau dans une chaine de caractères",desc:"Concaténe tous les éléments d'un tableau dans une chaine de caractères et renvoie cette nouvelle chaîne de caractères. Il est possible de concaténer tel quel ou avec un séparateur, <code>elements.join(' - ')</code> renvoie <code>foo - bar</code>",example:"console.log(arr.join());",output:'"5,1,8"'},{name:"toString",shortDesc:"de retourner une chaine de caractères représantant le tableau",desc:"Renvoie une chaine de caractères représentant le tableau spécifié et ses éléments.",example:"console.log(arr.toString());",output:'"5,1,8"'},{name:"toLocaleString",shortDesc:"de retourner une chaine de caractères localisée représantant le tableau",desc:"Cette méthode est un peu touchy. Renvoie une chaine de caractères localisée représentant le tableau spécifié et ses éléments. C'est vraiment utile pour les dates et les devises ! Le mieux est de consulter la documentation quand on souhaite l'utiliser car certains comportements sont étranges.",example:"let date = [new Date()];<br>\n        arr.toLocaleString();<br>\n        date.toLocaleString();<br>\n        console.log(arr, date);",output:'"5,1,8 12/26/2017, 6:54:49 PM"'}],ordering:[{name:"reverse",shortDesc:"d'inverser l'ordre d'un tableau",desc:"Inverse l'ordre d'un tableau : le premier élément devient le dernier et le dernier devient le premier et ainsi de suite.",example:"arr.reverse();<br>\n        console.log(arr);",output:"[8, 1, 5]"},{name:"sort",shortDesc:"de trier les éléments d'un tableau",desc:"Trie les éléments d'un tableau, dans ce même tableau, et renvoie le tableau.",example:"arr.sort();<br>\n        console.log(arr);",output:"[1, 5, 8]"}],other:[{name:"length",shortDesc:"de trouver la taille d'un tableau",desc:"Retourne le nombre d'éléments présents dans le tableau.",example:"console.log(arr.length);",output:"3"},{name:"fill",shortDesc:"de remplir tous les éléments d'un tableau avec une valeur statique",desc:"Remplit tous les éléments d'un tableau entre deux indices avec une valeur statique.",example:"arr.fill(2);<br>\n        console.log(arr);",output:"[2, 2, 2]"},{name:"copyWithin",shortDesc:"de copier une partie d'un tableau",desc:"Effectue une copie superficielle (shallow copy) d'une partie d'un tableau sur ce même tableau et le renvoie, sans modifier sa taille.",example:"arr.copyWithin(1);<br>\n        console.log(arr);",output:"[5, 5, 8]"}],iterate:[{name:"forEach",shortDesc:"exécutant une fonction sur chaque élément",desc:"Exécute une fonction donnée sur chaque élément du tableau.",example:"arr.forEach((element) => {<br>\n        <span>&nbsp;&nbsp;</span>console.log(element)<br>\n        });",output:"5<br>\n        1<br>\n        8"},{name:"map",shortDesc:"créant un nouveau tableau depuis chaque élément via une fonction",desc:"Crée un nouveau tableau composé des résultats d'une fonction donnée en argument sur chaque élément du tableau.",example:"let map = arr.map(x => x + 1);<br>\n        console.log(map);",output:"[6, 2, 9]"},{name:"entries",shortDesc:"créant un objet Array Iterator",desc:"Renvoie un nouvel objet de type Array Iterator qui contient le couple clef/valeur pour chaque élément du tableau. Il y a beaucoup de cas d'utilisation des iterators, mais aussi les autres méthodes à utiliser comme <code>values</code> et <code>keys</code>",example:"let iterator = arr.entries();<br>\n        console.log(iterator.next().value);",output:'[0, 5]<br>\n        <span class="comment">// the 0 is the index,</span><br>\n        <span class="comment">// the 5 is the first number</span>'}],find:{single:[{name:"includes",shortDesc:"si un élément existe",desc:"Permet de déterminer si un tableau contient un élément et renvoie true si c'est le cas, false sinon.",example:"console.log(arr.includes(1));",output:"true"},{name:"indexOf",shortDesc:"le premier indice d'un élément en particulier",desc:"Renvoie le premier indice pour lequel on trouve un élément donné dans un tableau. Si l'élément cherché n'est pas présent dans le tableau, la méthode renverra -1.",example:"console.log(arr.indexOf(5));",output:"0"},{name:"lastIndexOf",shortDesc:"le dernier indice d'un élément en particulier",desc:"Permet de renvoyer le dernier indice pour lequel une valeur donnée est présente dans un tableau. Si la valeur recherchée n'est pas présente, le résultat sera -1.",example:"console.log(arr.lastIndexOf(5));",output:"0"},{name:"find",shortDesc:"le premier élément qui respecte une condition",desc:"Renvoie la valeur du premier élément trouvé dans le tableau qui respecte la condition donnée par la fonction de test passée en argument. Sinon, la valeur undefined est renvoyée. Similaire à <code>findIndex()</code>, mais retourne l'élément au lieu de l'indice.",example:"let isTiny = (el) => el < 2;<br>\n          console.log(arr.find(isTiny));",output:"1"},{name:"findIndex",shortDesc:"le premier indice qui respecte une condition",desc:"Renvoie l'indice du premier élément du tableau qui satisfait une condition donnée par une fonction. Si la fonction renvoie faux pour tous les éléments du tableau, le résultat vaut -1. Similaire à <code>find()</code>, mais retourne l'indice au lieu de l'élément",example:"let isBig = (el) => el > 6;<br>\n          console.log(arr.findIndex(isBig));",output:"2"},{name:"reduce",shortDesc:"une valeur en réduisant le tableau, du début à la fin",desc:"Applique une fonction qui est un accumulateur et qui traite chaque valeur d'une liste (de la gauche vers la droite) afin de la réduire à une seule valeur.",example:"let reducer = (a, b) => a + b;<br>\n          <span>&nbsp;&nbsp;</span>console.log(arr.reduce(reducer));",output:"14"},{name:"reduceRight",shortDesc:"une valeur en réduisant le tableau, de la fin au début",desc:"Applique une fonction qui est un accumulateur et qui traite chaque valeur d'une liste (de la droite vers la gauche) afin de la réduire à une seule valeur.",example:"[arr, [0, 1]].reduceRight((a, b) => {<br>\n          <span>&nbsp;&nbsp;</span>return a.concat(b)<br>\n          }, [])",output:"[0, 1, 5, 1, 8]"}],many:[{name:"filter",shortDesc:"des éléments basés sur une condition",desc:"Crée et retourne un nouveau tableau contenant tous les éléments du tableau d'origine qui remplissent une condition déterminée par la fonction callback.",example:"let filtered = arr.filter(el => el > 4);<br>\n          console.log(filtered)",output:"[5, 8]"},{name:"every",shortDesc:"si oui ou non tous les éléments respectent une condition",desc:"Permet de tester si tous les éléments d'un tableau vérifient une condition donnée par une fonction en argument.",example:"let isSmall = (el) => el < 10;<br>\n          console.log(arr.every(isSmall));",output:"true"},{name:"some",shortDesc:"si oui ou non au moins un élément respecte une condition",desc:"Teste si au moins un élément du tableau passe le test implémenté par la fonction fournie.",example:"let biggerThan4 = (el) => el > 4;<br>\n          console.log(arr.some(biggerThan4));",output:"true"}]}}}},c7LI:function(e,r,n){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var t=n("7+uW"),a=n("NYxO");t.a.use(a.a);const o=new a.a.Store({state:{selectedMethod:"",adding:[{name:"splice",shortDesc:"一个或多个元素到数组",desc:"添加、删除或替换数组中的元素。",example:"arr.splice(2, 0, 'tacos');<br>\n        console.log(arr);",output:"[5, 1, 'tacos', 8]"},{name:"push",shortDesc:"元素到数组的末尾",desc:"将一个或多个元素添加到数组的末尾，并返回数组的新长度。",example:"arr.push(2);<br>\n        console.log(arr);",output:"[5, 1, 8, 2]"},{name:"unshift",shortDesc:"元素到数组的开头",desc:"将一个或多个元素添加到数组的开头，并返回数组的新长度。",example:"arr.unshift(2, 7);<br>\n        console.log(arr);",output:"[2, 7, 5, 1, 8]"},{name:"concat",shortDesc:"其他数组或值到这个数组",desc:"返回由这个数组与其他数组或值组成的新数组。",example:"let arr2 = ['a', 'b', 'c'];<br>\n        let arr3 = arr.concat(arr2);<br>\n        console.log(arr3);",output:"[5, 1, 8, 'a', 'b', 'c']"}],removing:[{name:"splice",shortDesc:"数组中一个或多个元素",desc:"添加、删除或替换数组中的元素。",example:"arr.splice(2, 1);<br>\n        console.log(arr);",output:"[5, 1]"},{name:"pop",shortDesc:"数组的最后一个元素",desc:"从数组中删除最后一个元素并返回该元素。",example:"arr.pop();<br>\n        console.log(arr);",output:"[5, 1]"},{name:"shift",shortDesc:"数组的第一个元素",desc:"从数组中移除第一个元素并返回该元素。",example:"arr.shift();<br>\n        console.log(arr);",output:"[1, 8]"},{name:"slice",shortDesc:"一个或多个才能使用，保持原数组不变。",desc:"<code>slice()</code>方法返回一个新的数组，是对原数组部分的浅拷贝。可以只传入<code> end </code>结束位置参数（<code> begin </code>开始位置将默认为 0），或者都传入<code> slice(begin, end) </code>。原数组不会被修改。",example:"let slicedArr = arr.slice(1);<br>\n        console.log(arr);<br>\n        console.log(slicedArr);",output:"[5, 1, 8]<br>\n        [1, 8]"}],string:[{name:"join",shortDesc:"把数组中的所有元素转换为字符串",desc:"把数组中的所有元素转换为字符串。可以按原样，或者在中间加入<code>elements.join('-')</code>返回<code>foo-bar</code>",example:"console.log(arr.join());",output:'"5,1,8"'},{name:"toString",shortDesc:"返回一个表示数组的字符串。",desc:"返回表示数组和它元素的字符串。",example:"console.log(arr.toString());",output:'"5,1,8"'},{name:"toLocaleString",shortDesc:"返回表示该数组的本地化字符串。",desc:"这个有点怪。返回表示数组及其元素的本地化字符串。这对日期和货币是非常有用，有一些奇怪的原生抽象，所以最好使用时参考文档。",example:"let date = [new Date()];<br>\n        const arrString = arr.toLocaleString();<br>\n        const dateString = date.toLocaleString();<br>\n        console.log(arrString, dateString);",output:'"5,1,8 12/26/2017, 6:54:49 PM"'}],ordering:[{name:"reverse",shortDesc:"反转数组中的元素顺序。",desc:"反转数组中元素的顺序 - 第一个变成最后一个，最后一个变成第一个。",example:"arr.reverse();<br>\n        console.log(arr);",output:"[8, 1, 5]"},{name:"sort",shortDesc:"对数组中元素进行排序。",desc:"对数组中的元素进行排序并返回数组。",example:"arr.sort();<br>\n        console.log(arr);",output:"[1, 5, 8]"}],other:[{name:"length",shortDesc:"查询数组的长度",desc:"返回数组中元素的数目。",example:"console.log(arr.length);",output:"3"},{name:"fill",shortDesc:"用静态值填充数组的所有元素",desc:"用一个静态值从开始索引到结束索引填充数组的所有元素。",example:"arr.fill(2);<br>\n        console.log(arr);",output:"[2, 2, 2]"},{name:"copyWithin",shortDesc:"复制数组中的一系列数组元素。",desc:"复制数组中的一系列数组元素。可以只传入<code> end </code>结束位置参数（<code> begin </code>开始位置将默认为 0），或者都传入<code> copyWithin(begin, end) </code>",example:"arr.copyWithin(1);<br>\n        console.log(arr);",output:"[5, 5, 8]"}],iterate:[{name:"forEach",shortDesc:"为每个元素都执行一次回调函数。",desc:"The forEach() 方法为每个元素都执行一次回调函数。",example:"arr.forEach((element) => {<br>\n        <span>&nbsp;&nbsp;</span>console.log(element)<br> \n        });",output:"5<br>\n        1<br>\n        8"},{name:"map",shortDesc:"回调函数处理每个元素并利用返回一个新数组",desc:"通过指定函数处理数组的每个元素，并返回处理后的数组。",example:"let map = arr.map(x => x + 1);<br>\n        console.log(map);",output:"[6, 2, 9]"},{name:"entries",shortDesc:"创建一个迭代器对象",desc:"entries() 返回一个遍历器对象，用来遍历[键名, 键值]组成的数组。迭代器有很多用途，还有其他与之结合使用的方法，如<code>values</code> 和 <code>keys</code>方法",example:"let iterator = arr.entries();<br>\n        console.log(iterator.next().value);",output:'[0, 5]<br>\n        <span class="comment">// the 0 is the index,</span><br>\n        <span class="comment">// the 5 is the first number</span>'}],find:{single:[{name:"includes",shortDesc:"某个元素是否存在",desc:"确定数组是否包含某个元素，并根据需要返回true或false。",example:"console.log(arr.includes(1));",output:"true"},{name:"indexOf",shortDesc:"给定元素的第一个索引",desc:"返回数组中可以找到给定元素的第一个索引，如果不存在则返回-1。",example:"console.log(arr.indexOf(5));",output:"0"},{name:"lastIndexOf",shortDesc:"给定元素的最后一个索引",desc:"返回一个给定元素最后出现的位置，如果不存在则返回-1。",example:"console.log(arr.lastIndexOf(5));",output:"0"},{name:"find",shortDesc:"满足条件的第一个元素",desc:"如果数组中的元素满足提供的回调函数，则返回数组中找到的值。如果未找到，则返回undefined。类似于<code>findIndex()</code>，但它返回的是项目而不是索引。",example:"let isTiny = (el) => el < 2;<br>\n          console.log(arr.find(isTiny));",output:"1"},{name:"findIndex",shortDesc:"满足条件的第一个元素的索引",desc:"返回数组中满足提供的回调函数的第一个元素的索引，否则返回-1，与<code> find() </ code>类似，但它返回索引而不是项目。",example:"let isBig = (el) => el > 6;<br>\n          console.log(arr.findIndex(isBig));",output:"2"},{name:"reduce",shortDesc:"从头到尾将数组元素计算为一个值",desc:"接收一个函数作为累加器，数组中的每个值（从左到右）开始缩减，最终计算为一个值。",example:"let reducer = (a, b) => a + b;<br>\n          <span>&nbsp;&nbsp;</span>console.log(arr.reduce(reducer));",output:"14"},{name:"reduceRight",shortDesc:"从尾到头将数组元素计算为一个值。",desc:"接收一个函数作为累加器，数组中的每个值（从右到左）开始缩减，最终计算为一个值。",example:"[arr, [0, 1]].reduceRight((a, b) => {<br>\n          <span>&nbsp;&nbsp;</span>return a.concat(b)<br>\n          }, [])",output:"[0, 1, 5, 1, 8]"}],many:[{name:"filter",shortDesc:"返回符合条件所有元素的数组",desc:"创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素。",example:"let filtered = arr.filter(el => el > 4);<br>\n          console.log(filtered)",output:"[5, 8]"},{name:"every",shortDesc:"每个元素是否都符合条件",desc:"如果数组中的每个元素满足指定函数，则返回true。",example:"let isSmall = (el) => el < 10;<br>\n          console.log(arr.every(isSmall));",output:"true"},{name:"some",shortDesc:"至少有一个元素符合指定条件",desc:"如果数组中的至少一个元素满足指定函数，则返回true。",example:"let biggerThan4 = (el) => el > 4;<br>\n          console.log(arr.some(biggerThan4));",output:"true"}]}},mutations:{selectionMethod(e,r){e.selectedMethod=r},resetSelection(e){e.selectedMethod=""}}});r.store=o},cACW:function(e,r,n){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default={state:{selectedMethod:"",adding:[{name:"splice",shortDesc:"element/s to an array",desc:"Adds and/or removes elements from an array.",example:"arr.splice(2, 0, 'tacos');<br>\n        console.log(arr);",output:"[5, 1, 'tacos', 8]"},{name:"push",shortDesc:"elements to the end of an array",desc:"Adds one or more elements to the end of an array and returns the new length of the array.",example:"arr.push(2);<br>\n        console.log(arr);",output:"[5, 1, 8, 2]"},{name:"unshift",shortDesc:"elements to the front of an array",desc:"Adds one or more elements to the front of an array and returns the new length of the array.",example:"arr.unshift(2, 7);<br>\n        console.log(arr);",output:"[2, 7, 5, 1, 8]"},{name:"concat",shortDesc:"this array to other array(s) and/or value(s)",desc:"Returns a new array comprised of this array joined with other array(s) and/or value(s).",example:"let arr2 = ['a', 'b', 'c'];<br>\n        let arr3 = arr.concat(arr2);<br>\n        console.log(arr3);",output:"[5, 1, 8, 'a', 'b', 'c']"}],removing:[{name:"splice",shortDesc:"element/s from an array",desc:"Adds and/or removes elements from an array.",example:"arr.splice(2, 1);<br>\n        console.log(arr);",output:"[5, 1]"},{name:"pop",shortDesc:"the last element of the array",desc:"Removes the last element from an array and returns that element.",example:"arr.pop();<br>\n        console.log(arr);",output:"[5, 1]"},{name:"shift",shortDesc:"the first element of the array",desc:"Removes the first element from an array and returns that element.",example:"arr.shift();<br>\n        console.log(arr);",output:"[1, 8]"},{name:"slice",shortDesc:"one or more elements in order for use, leaving the array as is",desc:"The <code>slice()</code> method returns a shallow copy of a portion of an array into a new array object. You can specify either just the ending element (where begin will default to zero) or both the beginning and the end, comma-separated. The original array will not be modified.",example:"let slicedArr = arr.slice(1);<br>\n        console.log(arr);<br>\n        console.log(slicedArr);",output:"[5, 1, 8]<br>\n        [1, 8]"}],string:[{name:"join",shortDesc:"join all elements of the array into a string",desc:"Joins all elements of an array into a string. You can join it together as is or with something in between, <code>elements.join(' -\n          ')</code> gives you <code>foo-bar</code>",example:"console.log(arr.join());",output:'"5,1,8"'},{name:"toString",shortDesc:"return a string representing the array.",desc:"Returns a string representing the array and its elements.",example:"console.log(arr.toString());",output:'"5,1,8"'},{name:"toLocaleString",shortDesc:"return a localized string representing the array.",desc:"This one is a bit wacko. Returns a localized string representing the array and its elements. This is very useful for dates and currency and has some strange native abstractions, so best to consult the docs when using it",example:"let date = [new Date()];<br>\n        const arrString = arr.toLocaleString();<br>\n        const dateString = date.toLocaleString();<br>\n        console.log(arrString, dateString);",output:'"5,1,8 12/26/2017, 6:54:49 PM"'}],ordering:[{name:"reverse",shortDesc:"reverse the order of the array",desc:"Reverses the order of the elements of an array in place — the first becomes the last, and the last becomes the first.",example:"arr.reverse();<br>\n        console.log(arr);",output:"[8, 1, 5]"},{name:"sort",shortDesc:"sort the items of the array",desc:"Sorts the elements of an array in place and returns the array.",example:"arr.sort();<br>\n        console.log(arr);",output:"[1, 5, 8]"}],other:[{name:"length",shortDesc:"find the length of the array",desc:"Returns the number of elements in that array.",example:"console.log(arr.length);",output:"3"},{name:"fill",shortDesc:"fill all the elements of the array with a static value",desc:"Fills all the elements of an array from a start index to an end index with a static value.",example:"arr.fill(2);<br>\n        console.log(arr);",output:"[2, 2, 2]"},{name:"copyWithin",shortDesc:"copy a sequence of array elements within the array.",desc:"Copies a sequence of array elements within the array. You can specify either just the ending element (where begin will default to zero) or both the beginning and the end, comma-separated.",example:"arr.copyWithin(1);<br>\n        console.log(arr);",output:"[5, 5, 8]"}],iterate:[{name:"forEach",shortDesc:"executing a function I will create for each element",desc:"The forEach() method executes a provided function once for each array element.",example:"arr.forEach((element) => {<br>\n        <span>&nbsp;&nbsp;</span>console.log(element)<br>\n        });",output:"5<br>\n        1<br>\n        8"},{name:"map",shortDesc:"creating a new array from each element with a function I create",desc:"Creates a new array with the results of calling a provided function on every element in this array.",example:"let map = arr.map(x => x + 1);<br>\n        console.log(map);",output:"[6, 2, 9]"},{name:"entries",shortDesc:"creating an iterator object",desc:"Returns a new Array Iterator object that contains the key/value pairs for each index in the array. There are a lot of uses for iterators, as well as other methods used with it in conjuction, like <code>values</code> and <code>keys</code>",example:"let iterator = arr.entries();<br>\n        console.log(iterator.next().value);",output:'[0, 5]<br>\n        <span class="comment">// the 0 is the index,</span><br>\n        <span class="comment">// the 5 is the first number</span>'}],find:{single:[{name:"includes",shortDesc:"out if a certain element exists",desc:"Determines whether an array contains a certain element, returning true or false as appropriate.",example:"console.log(arr.includes(1));",output:"true"},{name:"indexOf",shortDesc:"the first index of a particular item",desc:"Returns the first index at which a given element can be found in the array, or -1 if it is not present.",example:"console.log(arr.indexOf(5));",output:"0"},{name:"lastIndexOf",shortDesc:"the last index of a particular item",desc:"Returns the last (greatest) index of an element within the array equal to the specified value, or -1 if none is found.",example:"console.log(arr.lastIndexOf(5));",output:"0"},{name:"find",shortDesc:"the first element that satisfies a condition",desc:"Returns the found value in the array, if an element in the array satisfies the provided testing function or undefined if not found. Similar to <code>findIndex()</code>, but it returns the item instead of the index.",example:"let isTiny = (el) => el < 2;<br>\n          console.log(arr.find(isTiny));",output:"1"},{name:"findIndex",shortDesc:"the first index of an item that satisfies a condition",desc:"Returns the index of the first element in the array that satisfies the provided testing function. Otherwise -1 is returned. Similar to <code>find()</code>, but it returns the index instead of the item.",example:"let isBig = (el) => el > 6;<br>\n          console.log(arr.findIndex(isBig));",output:"2"},{name:"reduce",shortDesc:"a value by reducing the Array, start to finish",desc:"Apply a function against an accumulator and each value of the array (from left-to-right) as to reduce it to a single value.",example:"let reducer = (a, b) => a + b;<br>\n          <span>&nbsp;&nbsp;</span>console.log(arr.reduce(reducer));",output:"14"},{name:"reduceRight",shortDesc:"a value by reducing the Array, finish to start",desc:"Apply a function against an accumulator and each value of the array (from right-to-left) as to reduce it to a single value.",example:"[arr, [0, 1]].reduceRight((a, b) => {<br>\n          <span>&nbsp;&nbsp;</span>return a.concat(b)<br>\n          }, [])",output:"[0, 1, 5, 1, 8]"}],many:[{name:"filter",shortDesc:"values based on a condition I create",desc:"Creates a new array with all of the elements of this array for which the provided filtering function returns true.",example:"let filtered = arr.filter(el => el > 4);<br>\n          console.log(filtered)",output:"[5, 8]"},{name:"every",shortDesc:"whether or not every item satisfies a condition",desc:"Returns true if every element in this array satisfies the provided testing function.",example:"let isSmall = (el) => el < 10;<br>\n          console.log(arr.every(isSmall));",output:"true"},{name:"some",shortDesc:"whether or not at least one item satisfies a condition",desc:"Returns true if at least one element in this array satisfies the provided testing function.",example:"let biggerThan4 = (el) => el > 4;<br>\n          console.log(arr.some(biggerThan4));",output:"true"}]}}}},dLso:function(e,r){e.exports={short:"de",long:"German",createdBy:"bahe007 and AWolf81"}},lx7K:function(e,r,n){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default={state:{selectedMethod:"",adding:[{name:"splice",shortDesc:"elemento/s en un array",desc:"Añade y/o elimina elementos de un array.",example:"arr.splice(2, 0, 'tacos');<br>\n                console.log(arr);",output:"[5, 1, 'tacos', 8]"},{name:"push",shortDesc:"elementos al final de un array",desc:"Añade uno o más elementos al final de un array y devuelve la nueva longitud del array.",example:"arr.push(2);<br>\n                console.log(arr);",output:"[5, 1, 8, 2]"},{name:"unshift",shortDesc:"elementos al principio de un array",desc:"Añade uno o más elementos al principio de un array y devuelve la nueva longitud del array.",example:"arr.unshift(2, 7);<br>\n                console.log(arr);",output:"[2, 7, 5, 1, 8]"},{name:"concat",shortDesc:"este array con otro(s) array(s) y/o valor(es)",desc:"Devuelve un nuevo array compuesto por este array unido a otro(s) array(s) y/o valor(es).",example:"let arr2 = ['a', 'b', 'c'];<br>\n                let arr3 = arr.concat(arr2);<br>\n                console.log(arr);",output:"[5, 1, 8, 'a', 'b', 'c']"}],removing:[{name:"splice",shortDesc:"elemento/s en un array",desc:"Añade y/o elimina elementos de un array.",example:"arr.splice(2, 1);<br>\n                console.log(arr);",output:"[5, 1]"},{name:"pop",shortDesc:"el último elemento del array",desc:"Elimina el último elemento de un array y lo devuelve.",example:"arr.pop();<br>\n                console.log(arr);",output:"[5, 1]"},{name:"shift",shortDesc:"el primer elemento del array",desc:"Elimina el primer elemento de un array y lo devuelve.",example:"arr.shift();<br>\n                console.log(arr);",output:"[1, 8]"},{name:"slice",shortDesc:"uno o más elementos en orden de uso, dejando el array como está",desc:"El método <code>slice()</code> devuelve una copia de una parte del array dentro de un nuevo array. Puede especificar sólo el elemento final (donde el inicio será cero) o el principio y el final separados por comas. El array original no se modificará.",example:"let slicedArr = arr.slice(1);<br>\n                console.log(arr);<br>\n                console.log(slicedArr);",output:"[5, 1, 8]<br>\n                [1, 8]"}],string:[{name:"join",shortDesc:"unir todos los elementos del array en una cadena",desc:"Une todos los elementos de un array en una cadena. Puede unirlo como está o con algo intermedio (un separador), <code>elements.join(' - ')</code> le da <code>foo - bar</code>",example:"arr.join();<br>\n                console.log(arr);",output:'"5,1,8"'},{name:"toString",shortDesc:"devolver una cadena de caracteres representando el array.",desc:"Devuelve una cadena de caracteres que representa el array y sus elementos.",example:"arr.toString();<br>\n                console.log(arr);",output:'"5,1,8"'},{name:"toLocaleString",shortDesc:"devolver la representación del array como una cadena utilizando la configuración regional.",desc:"Este es un poco loco. Devuelve la representación del array como una cadena utilizando la configuración regional. Esto es muy útil para fechas y moneda y tiene algunas extrañas abstracciones nativas, por lo que es mejor consultar los documentos al utilizarlo.",example:"let date = [new Date()];<br>\n                const arrString = arr.toLocaleString();<br>\n                const dateString = date.toLocaleString();<br>\n                console.log(arrString, dateString);",output:'"5,1,8 12/26/2017, 6:54:49 PM"'}],ordering:[{name:"reverse",shortDesc:"invertir el orden del array",desc:"Invierte el orden de los elementos de un array - el primero se convierte en el último, y el último en el primero.",example:"arr.reverse();<br>\n                console.log(arr);",output:"[8, 1, 5]"},{name:"sort",shortDesc:"ordenar los elementos del array",desc:"Ordena los elementos de un array y lo devuelve.",example:"arr.sort();<br>\n                console.log(arr);",output:"[1, 5, 8]"}],other:[{name:"length",shortDesc:"encontrar la longitud del array",desc:"Devuelve el número de elementos en ese array.",example:"console.log(arr.length);",output:"3"},{name:"fill",shortDesc:"llenar todos los elementos del array con un valor estático",desc:"Llena todos los elementos de un array desde un índice inicial hasta un índice final con un valor estático.",example:"arr.fill(2);<br>\n                console.log(arr);",output:"[2, 2, 2]"},{name:"copyWithin",shortDesc:"copiar una secuencia de elementos del array dentro del array.",desc:"Copia una secuencia de elementos del array dentro del array. Puede especificar sólo el elemento final (donde el inicio será cero) o el principio y el final separados por comas.",example:"arr.copyWithin(1);<br>\n                console.log(arr);",output:"[5, 5, 8]"}],iterate:[{name:"forEach",shortDesc:"ejecutar una función creada para cada elemento",desc:"El método forEach() ejecuta una función determinada para cada elemento del array.",example:"arr.forEach((element) => {<br>\n                <span>&nbsp;&nbsp;</span>console.log(element)<br>\n                });",output:"5<br>\n                1<br>\n                8"},{name:"map",shortDesc:"crear un nuevo array a partir de cada elemento con una función creada por el usuario",desc:"Crea un nuevo array con los resultados de la llamada a la función indicada aplicados a cada uno de sus elementos.",example:"let map = arr.map(x => x + 1);<br>\n                console.log(map);",output:"[6, 2, 9]"},{name:"entries",shortDesc:"crear un objeto iterador",desc:"Devuelve un nuevo objeto Array Iterator que contiene los pares clave/valor para cada índice de la matriz. Hay muchos usos para los iteradores, así como otros métodos utilizados con ellos en conjunto, como <code>values</code> y <code>keys</code>.",example:"let iterator = arr.entries();<br>\n                console.log(iterator.next().value);",output:'[0, 5]<br>\n                <span class="comment">// the 0 is the index,</span><br>\n                <span class="comment">// the 5 is the first number</span>'}],find:{single:[{name:"includes",shortDesc:"si existe un elemento determinado",desc:"Determina si un array contiene un elemento determinado, devolviendo verdadero o falso según corresponda.",example:"console.log(arr.includes(1));",output:"true"},{name:"indexOf",shortDesc:"el primer índice en el que se puede encontrar un elemento",desc:"Devuelve el primer índice en el que se puede encontrar un elemento dado en el array, o -1 si no está presente.",example:"console.log(arr.indexOf(5));",output:"0"},{name:"lastIndexOf",shortDesc:"el ultimo índice en el que se puede encontrar un elemento",desc:"Devuelve el último índice (máximo) de un elemento dentro del array igual al valor especificado, o -1 si no se encuentra ninguno.",example:"console.log(arr.indexOf(5));",output:"0"},{name:"find",shortDesc:"el primer elemento que satisface una condición",desc:"Devuelve el valor encontrado en el array, si un elemento del array satisface la función de prueba provista o undefined si no se encuentra. Similar a <code>findIndex()</code>, pero devuelve el ítem en lugar del índice.",example:"let isTiny = (el) => el < 2;<br>\n                    console.log(arr.find(isTiny));",output:"1"},{name:"findIndex",shortDesc:"el primer índice de un artículo que satisface una condición",desc:"Devuelve el índice del primer elemento del array que satisface la función de prueba proporcionada. De lo contrario, se devuelve -1. Similar a <code>find()</code>, pero devuelve el índice en lugar del elemento.",example:"let isBig = (el) => el > 6;<br>\n                    console.log(arr.findIndex(isBig));",output:"2"},{name:"reduce",shortDesc:"un valor para reducir el Array, de principio a fin",desc:"Aplica una función a un acumulador y a cada valor de un array (de izquierda a derecha) para reducirlo a un único valor.",example:"let reducer = (a, b) => a + b;<br>\n                    <span>&nbsp;&nbsp;</span>console.log(arr.reduce(reducer));",output:"14"},{name:"reduceRight",shortDesc:"un valor para reducir el Array, de fin a principio",desc:"Aplica una función a un acumulador y a cada valor de un array (de derecha a izquierda) para reducirlo a un único valor.",example:"[arr, [0, 1]].reduceRight((a, b) => {<br>\n                      <span>&nbsp;&nbsp;</span>return a.concat(b)<br>\n                      }, [])",output:"[0, 1, 5, 1, 8]"}],many:[{name:"filter",shortDesc:"valores basados en una condición que usted crea",desc:"Crea un nuevo array con todos los elementos de este array para el cual la función de filtrado proporcionada devuelve true.",example:"let filtered = arr.filter(el => el > 4);<br>\n                    console.log(filtered)",output:"[5, 8]"},{name:"every",shortDesc:"si cada elemento satisface o no una condición",desc:"Devuelve true si cada elemento de este array satisface la función de prueba proporcionada.",example:"let isSmall = (el) => el < 10;<br>\n                    console.log(arr.every(isSmall));",output:"true"},{name:"some",shortDesc:"si un elemento cumple o no al menos una condición",desc:"Devuelve true si al menos un elemento de este array satisface la función de prueba proporcionada.",example:"let biggerThan4 = (el) => el > 4;<br>\n                    console.log(arr.some(biggerThan4));",output:"true"}]}}}},mJJP:function(e,r){e.exports={short:"en",long:"English",createdBy:"sdras"}},vF68:function(e,r){},vdRI:function(e,r,n){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var t=n("7+uW"),a=n("NYxO"),o=n("kmDT"),s=n("0iGN"),l=n("WbDD"),i=n("lx7K"),c=n("cACW"),d=n("I9nf"),u=n("YsDL"),m=n("BYe3");const p=(e=>{let r=e.keys(),n=r.map(e);let t={};return r.filter((e,r)=>e.endsWith("json")).forEach(e=>{const a=r.indexOf(e),o=n[a];t[o.short]={long:o.long}}),t})(n("DERJ"));t.a.use(a.a);const h={selectionMethod(e,r){e.selectedMethod=r},resetSelection(e){e.selectedMethod=""},changeLanguage(e,r){e.curLanguage=r,t.a.i18n.set(r)}},g=new a.a.Store({modules:{ar:s.default,bg:l.default,es:i.default,en:c.default,de:d.default,fr:u.default,pt:m.default},state:{selectedMethod:void 0,curLanguage:"en",languages:p},mutations:h});r.store=g,t.a.use(o.a.plugin,g),t.a.i18n.add("ar",{firstMethod:"لدي مجموعة، أود",findMethod:"أحاول أن أجد",methodOptions:"أنا بحاجة لــ",methodTypes:{add:"إضافة",remove:"إزالة",find:"تجد","iterate by":"يتكرر من قبل",string:"خيط"},singleItem:"شيء واحد",manyItems:"واحد أو العديد من البنود",primaryOptions:["إضافة عناصر أو صفائف أخرى","إزالة العناصر","العثور على البنود","المشي على البنود","إرجاع سلسلة","ترتيب صفيف","شيء آخر"]}),t.a.i18n.add("bg",{firstMethod:"Имам масив, бих искал",findMethod:"Опитвам се да намеря",methodOptions:"Tрябва да",methodTypes:{add:"добави",remove:"премахване",find:"намери","iterate by":"обхождане",string:"низ"},singleItem:"един елемент",manyItems:"един или много елементи",primaryOptions:["добавете елементи или други масиви","премахване на елементи","намерете елементи","преминете през елементите","връщане на низ","сортиране на масив","нещо друго"]}),t.a.i18n.add("en",{firstMethod:"I have an array, I would like to",findMethod:"I'm trying to find",methodOptions:"I need to",methodTypes:{add:"add",remove:"remove",find:"find","iterate by":"iterate by",string:"string"},singleItem:"one item",manyItems:"one or many items",primaryOptions:["add items or other arrays","remove items","find items","walk over items","return a string","order an array","something else"]}),t.a.i18n.add("es",{firstMethod:"Tengo un array, me gustaría",findMethod:"Estoy intentando encontrar",methodOptions:"Necesito que",methodTypes:{add:"agregar",remove:"eliminar",find:"buscar","iterate by":"iterar con",string:"Cadena de caracteres"},singleItem:"un elemento",manyItems:"uno o mas elementos",primaryOptions:["agregar elementos u otros arrays","eliminar elementos","buscar elementos","pasar entre elementos","devolver una cadena de caracteres","ordenar un array","cualquier otra cosa"]}),t.a.i18n.add("de",{firstMethod:"Ich habe ein Array und würde gerne",findMethod:"Ich möchte folgendes finden",methodOptions:"Ich muss",methodTypes:{add:"hinzufügen",remove:"entfernen",find:"finden","iterate by":"durchlaufen",string:"String zurückgeben"},singleItem:"ein Element",manyItems:"ein oder mehrere Elemente",primaryOptions:["Elemente oder Arrays hinzufügen","Elemente entfernen","Elemente finden","Elemente durchlaufen","einen String zurückgeben","ein Array sortieren","etwas anders machen"]}),t.a.i18n.add("fr",{firstMethod:"J'ai un tableau, je voudrais",findMethod:"J'essaye de trouver",methodOptions:"J'ai besoin",methodTypes:{add:"d'ajouter",remove:"de supprimer",find:"de chercher","iterate by":"d'itérer en",string:"chaine de caractères"},singleItem:"un élément",manyItems:"un ou plusieurs éléments",primaryOptions:["ajouter des éléments","supprimer des éléments","chercher des éléments","parcourir les éléments","retourner une chaine de caractères","trier les éléments","de faire autre chose"]}),t.a.i18n.add("pt",{firstMethod:"Eu tenho um array e gostaria de:",findMethod:"Eu estou tentando encontrar",methodOptions:"Eu preciso",methodTypes:{add:"adicionar",remove:"remover",find:"procurar","iterate by":"iterar",string:"string"},singleItem:"um item",manyItems:"um ou mais itens",primaryOptions:["adicionar um item ou outro array","remover itens","procurar itens","iterar sobre os itens","retornar uma string","ordernar os itens","nenhuma das opções"]}),t.a.i18n.set(g.state.curLanguage)}},["NHnr"]);
//# sourceMappingURL=app.d08025ce542ed4cb1aa4.js.map